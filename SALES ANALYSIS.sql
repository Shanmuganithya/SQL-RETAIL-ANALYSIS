-- DATABASE CREATION
create database retail_sales;
use retail_sales;

-- TABLE CREATION
CREATE TABLE RETAIL_SALES(transactions_id INT primary key,
	sale_date date,	
    sale_time time,
	customer_id	INT ,
    gender	varchar(30),
    age INT,
	category varchar(30),
	quantiy	INT,
    price_per_unit float,	
    cogs float,
	total_sale FLOAT);
    SELECT * FROM retail_sales LIMIT 2000;
    SELECT count(*) FROM retail_sales;
    ## DATA CLEANING
    SELECT * FROM RETAIL_SALES WHERE
    `transactions_id` IS NULL OR
    `sale_date` IS NULL OR
    `sale_time` IS NULL OR
    `customer_id` IS NULL OR
    `gender` IS NULL OR
    `age` IS NULL OR
    `category` IS NULL OR
    `quantiy` IS NULL OR
    `price_per_unit` IS NULL OR
    `cogs` IS NULL OR
    `total_sale` IS NULL; 

## QUESTINONARIES
-- TOTAL NUMBER OF SALES 
SELECT count(*) AS TOTAL_SALES FROM retail_sales;
  
-- TOTAL NUMBER OF CUSTOMERS 
SELECT COUNT(distinct(customer_id)) AS TOTAL_CUSTOMERS FROM retail_sales;
 
 select * from retail_sales;
 -- CATOGORIES AVAILABLE
 SELECT DISTINCT CATEGORY FROM retail_sales;
 
 -- BUSINESS KEY PROBLEMS AND ANSWERS
-- Q.1) WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON "2022-11-05"
SELECT * FROM retail_sales WHERE sale_date ="2022-11-05";

-- Q.2)WRITE A SQL QUERY TO RETRIEVE ALL TRANSACTIONS WERE THE CATEGORY IS "CLOTHING" AND THE QUANTITY SOLD IS MORE THAN 10 IN THE MONTH OF NOV-22
SELECT * FROM retail_sales WHERE category="CLOTHING" AND QUANTIY >=4 AND sale_date between "2022-11-01"AND"2022-11-30";

-- Q.3)WRITE A SQL QUERY TO CALCULATE THE TOTAL SALES (TOTAL_SALE) FOR EACH CATEGORY
SELECT CATEGORY, SUM(TOTAL_SALE),COUNT(*) AS TOTAL_ORDERS FROM retail_sales group by category;

-- Q.4)WRITE A SQL QUERY TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE "BEAUTY" CATEGORY
SELECT round(AVG(AGE)) AS AVERAGE_AGE FROM retail_sales WHERE category="BEAUTY";

-- Q.5)WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALES IS GREATER THAN 1000
SELECT * FROM retail_sales WHERE total_sale > 1000;

-- Q.6)WRITE A SQL QUERY TO FIND THE TOTAL NUMBER OF TRANSACTIONS (TRANSACTION_ID) MADE BY EACH GENDER IN EACH CATEGORY
SELECT COUNT(TRANSACTIONS_ID),GENDER,CATEGORY FROM retail_sales group by CATEGORY,GENDER;

-- Q.7)WRITE A SQL QUERY TO CALCULATE THE AVERAGE SALE FOR EACH MONTH.FIND OUT BEST SELLING MONTH IN EACH YEAR
SELECT * FROM retail_sales;
select
    year,
	month,
    avg_sale
from
( 
SELECT 
     year(sale_date) as year ,
     month(SALE_DATE) AS MONTH,
     round(avg(total_sale)) as avg_sale,
	rank()  over(partition by year(sale_date) order by round(avg(total_sale)) desc) as ranks 
 FROM retail_sales
 GROUP BY year,month
 ) as t1
 where ranks = 1 ;
 
 -- Q.8) WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALES
 SELECT * FROM retail_sales;
 SELECT CUSTOMER_ID,TOTAL_SALE FROM RETAIL_SALES;
 SELECT CUSTOMER_ID,sum(TOTAL_SALE) AS TOTAL_SALES  FROM RETAIL_SALES group by CUSTOMER_ID ORDER BY TOTAL_SALES DESC LIMIT 5;
 
 -- Q.9) WRITE A SQL QUERY TO FIND THE NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEMS FOR EACH CATEGORY
 SELECT CATEGORY,COUNT(distinct CUSTOMER_ID) AS UNIQUE_CUSTOMERS FROM retail_sales GROUP BY category;
 
 -- Q.10) WRITE A SQL QUERY TO CREATE EACH SHIFT AND NUMBER OF ORDERS (EXAMPLE MORNING <=12, AFTERNOON BETWEEN 12 & 17 ,EVENING > 17)
 SELECT COUNT(TRANSACTIONS_ID),SHIFT FROM (SELECT *, CASE
 WHEN HOUR(SALE_TIME) < 12 THEN "MORNING"
 WHEN HOUR(SALE_TIME ) between 12 AND 17 THEN "AFTERNOON"
 ELSE "EVENING"
 END AS SHIFT
 FROM retail_sales) AS T2 group by SHIFT;
 -- END OF PROJECT
 






